#!/usr/bin/with-contenv bash
# shellcheck shell=bash
set -e

# shellcheck source=../cont-mongo.d/functions
source /etc/cont-mongo.d/functions

# Place configuration if not present
if [ ! -f "${MONGO_CONFIG}" ]; then
  log-init "loading default configuration"
  s6-setuidgid abc cp -r /defaults/mongo/mongod.conf "${MONGO_CONFIG}"
fi

# systemLog.verbosity
case "${MONGO_SYSTEMLOG_VERBOSITY}" in
  0|1|2|3|4|5)  set_mongo_param "systemLog.verbosity" "${MONGO_SYSTEMLOG_VERBOSITY}";;
  *)            log-init "invalid value for systemLog.verbosity: ${MONGO_SYSTEMLOG_VERBOSITY}";;
esac

# systemLog.path
set_mongo_param "systemLog.path" "${MONGO_SYSTEMLOG_PATH}"

# systemLog.logAppend
if is_enabled "${MONGO_SYSTEMLOG_LOGAPPEND}"; then
  set_mongo_param "systemLog.logAppend" true
else
  set_mongo_param "systemLog.logAppend" false
fi

# systemLog.logRotate
case "${MONGO_SYSTEMLOG_LOGROTATE}" in
  rename|reopen)  set_mongo_param "systemLog.logRotate" "${MONGO_SYSTEMLOG_LOGROTATE}";;
  *)              log-init "invalid value for systemLog.logRotate: ${MONGO_SYSTEMLOG_LOGROTATE}";;
esac

# systemLog.destination
case "${MONGO_SYSTEMLOG_DESTINATION}" in
  file|syslog)  set_mongo_param "systemLog.destination" "${MONGO_SYSTEMLOG_DESTINATION}";;
  *)            log-init "invalid value for systemLog.destination: ${MONGO_SYSTEMLOG_DESTINATION}";;
esac

# systemLog.timeStampFormat
case "${MONGO_SYSTEMLOG_TIMESTAMP_FORMAT}" in
  iso8601-local|iso8601-utc)  set_mongo_param "systemLog.timeStampFormat" "${MONGO_SYSTEMLOG_TIMESTAMP_FORMAT}";;
  *)                          log-init "invalid value for systemLog.timeStampFormat: ${MONGO_SYSTEMLOG_TIMESTAMP_FORMAT}";;
esac

# net.port
if is_enabled "${MONGO_MAINTENANCE}"; then
  set_mongo_param "net.port" "${MONGO_MAINTENANCE_PORT}"
else
  set_mongo_param "net.port" "${MONGO_PORT}"
fi

# net.maxIncomingConnections
set_mongo_param "net.maxIncomingConnections" "${MONGO_MAX_INCOMING_CONNS}"

# net.compression.compressors
set_mongo_param "net.compression.compressors" "${MONGO_COMPRESSORS}"

# net.unixDomainSocket.enabled
if is_enabled "${MONGO_SOCKET_ENABLED}"; then
  set_mongo_param "net.unixDomainSocket.enabled" true
else
  set_mongo_param "net.unixDomainSocket.enabled" false
fi

# net.unixDomainSocket.pathPrefix
if [ ! -d "${MONGO_SOCKET_DIR}" ]; then
  mkdir -p "${MONGO_SOCKET_DIR}"
fi
chown -R abc:abc "${MONGO_SOCKET_DIR}"
set_mongo_param "net.unixDomainSocket.pathPrefix" "${MONGO_SOCKET_DIR}"

# storage.directoryPerDB
if is_enabled "${MONGO_DIRECTORY_PER_DB}"; then
  set_mongo_param "storage.directoryPerDB" true
else
  set_mongo_param "storage.directoryPerDB" false
fi

# EOF